version: '3'

services:
   portainer:
    image: portainer/portainer:latest
    container_name: portainer
    command:
    restart: always
    volumes:
      - "./data/portainer:/data"
      - "/var/run/docker.sock:/var/run/docker.sock"
    env_file: portainer.env
     
  ide:
    image: codercom/code-server:v2
    container_name: ide
    restart: always
    volumes:
      - "$PWD:/home/coder/project"
    env_file: ide.env
  
  smtp:
    image: turgon37/smtp-relay:latest
    container_name: smtp
    restart: always
    ports:
     - "25:25"
    volumes:
    - "./data/smtp:/data"
    env_file: smtp.env

  postgres:
    container_name: postgres
    image: postgres
    env_file: postgres.env
    volumes:
       - ./data/postgres:/data/postgres
    expose:
      - 5432
    restart: always
  
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    expose:
      - 80
    env_file: pgadmin.env
    volumes:
       - ./data/pgadmin:/root/.pgadmin
    restart: always

  registry:
    image: registry:2
    container_name: registry
    expose:
      - 5000
    volumes:
      - "./data/registry/config:/etc/docker/registry"
      - "./data/registry/data:/var/lib/registry"
      - "./data/registry/auth:/auth"
      - "./data/nginx/certs:/etc/nginx/certs:ro"
    restart: always
    env_file: registry.env

  registry-ui:
    image: joxit/docker-registry-ui:latest
    container_name: registry-ui
    expose:
      - 80
    depends_on:
      - registry
    env_file: registry-ui.env

  drone-server:
    image: drone/drone:1
    container_name: drone-server
    expose:
      - 8000
      - 9000
    volumes:
      - "./data/drone:/var/lib/drone"
    restart: always
    env_file: drone-server.env

  drone-agent:
    image: drone/agent:1
    container_name: drone-agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file: drone-agent.env

  monitor:
    image: vimagick/cadvisor
    container_name: monitor
    expose:
      - 8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: always
    env_file: monitor.env
   
  watchtower:
    image: v2tec/watchtower
    container_name: watchtower
    command: --debug
    env_file: watchtower.env
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: always

networks:
  default:
    external:
      name: nginx-proxy

version: '2'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "html:/usr/share/nginx/html"
      - "vhost:/etc/nginx/vhost.d"
      - "ssl:/etc/nginx/certs:ro"
      - "./nginx_proxy.conf:/etc/nginx/conf.d/nginx_proxy.conf"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
    env_file: nginx-proxy.env
      
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-letsencrypt
    restart: always
    volumes:
      - "html:/usr/share/nginx/html"
      - "vhost:/etc/nginx/vhost.d"
      - "ssl:/etc/nginx/certs:rw"
      - "./nginx_proxy.conf:/etc/nginx/conf.d/nginx_proxy.conf"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    depends_on:
      - "nginx-proxy"
    env_file: nginx-proxy.env
    
    
  portainer:
    image: portainer/portainer:latest
    container_name: portainer
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainer:/data"
    env_file: portainer.env
    environment:
     - VIRTUAL_HOST=docker.${BASE_DOMAIN}
     - VIRTUAL_PORT=9000
     - LETSENCRYPT_HOST=docker.${BASE_DOMAIN}
     - LETSENCRYPT_EMAIL=${ADMIN_EMAIL}

  registry:
    image: registry:2
    container_name: registry
    expose:
      - 5000
    volumes:
      - "registry:/var/lib/registry"
      - "ssl:/etc/nginx/certs:ro"
      - "./registry.htpasswd:/auth/.htpasswd"
      - "./registry.yml:/etc/docker/registry/config.yml"
    restart: always
    env_file: registry.env
    environment:
      - VIRTUAL_HOST=registry.${BASE_DOMAIN}
      - VIRTUAL_PORT=5000
      - LETSENCRYPT_HOST=registry.${BASE_DOMAIN}
      - LETSENCRYPT_EMAIL=${ADMIN_EMAIL}

  registry-ui:
    image: joxit/docker-registry-ui:latest
    container_name: registry-ui
    expose:
      - 80
    depends_on:
      - registry
    env_file: registry.env
    environment:
      - VIRTUAL_HOST=ui.registry.${BASE_DOMAIN}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=ui.registry.${BASE_DOMAIN}
      - LETSENCRYPT_EMAIL=${ADMIN_EMAIL}

  drone-server:
    image: drone/drone:0.8
    container_name: drone-server
    expose:
      - 8000
      - 9000
    volumes:
      - "drone:/var/lib/drone"
    restart: always
    env_file: drone.env
    environment:
      - DRONE_HOST=http://ci.${BASE_DOMAIN}
      - VIRTUAL_HOST=ci.${BASE_DOMAIN}
      - VIRTUAL_PORT=8000
      - LETSENCRYPT_HOST=ci.${BASE_DOMAIN}
      - LETSENCRYPT_EMAIL=${ADMIN_EMAIL}

  drone-agent:
    image: drone/agent:0.8
    container_name: drone-agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file: drone.env
    environment:
      - DRONE_SERVER=drone-server:9000

  watchtower:
    image: v2tec/watchtower
    container_name: watchtower
    command: --debug
    env_file: watchtower.env
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: always
    
volumes:
  vhost:
  html:
  ssl:
  portainer:
  registry:
  drone:

networks:
  default:
    external:
      name: nginx-proxy
